// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_Productos_ProgramacionIV.Data;

#nullable disable

namespace WebAPI_Productos_ProgramacionIV.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240124140712_TablasJugadorPartida")]
    partial class TablasJugadorPartida
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI_Productos_ProgramacionIV.Models.Jugador", b =>
                {
                    b.Property<int>("JugadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorID"));

                    b.HasKey("JugadorID");

                    b.ToTable("Jugador");

                    b.HasData(
                        new
                        {
                            JugadorID = 1
                        },
                        new
                        {
                            JugadorID = 2
                        });
                });

            modelBuilder.Entity("WebAPI_Productos_ProgramacionIV.Models.Partida", b =>
                {
                    b.Property<int>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaId"));

                    b.Property<int>("JugadorDosID")
                        .HasColumnType("int");

                    b.Property<bool>("JugadorDosIsWin")
                        .HasColumnType("bit");

                    b.Property<int>("JugadorUnoID")
                        .HasColumnType("int");

                    b.Property<bool>("JugadorUnoIsWin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaPartida")
                        .HasColumnType("datetime2");

                    b.HasKey("PartidaId");

                    b.ToTable("Partida");

                    b.HasData(
                        new
                        {
                            PartidaId = 1,
                            JugadorDosID = 2,
                            JugadorDosIsWin = false,
                            JugadorUnoID = 1,
                            JugadorUnoIsWin = true,
                            fechaPartida = new DateTime(2024, 1, 24, 9, 7, 12, 7, DateTimeKind.Local).AddTicks(4674)
                        },
                        new
                        {
                            PartidaId = 2,
                            JugadorDosID = 1,
                            JugadorDosIsWin = false,
                            JugadorUnoID = 2,
                            JugadorUnoIsWin = true,
                            fechaPartida = new DateTime(2024, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebAPI_Productos_ProgramacionIV.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Cantidad = 34,
                            Descripcion = "Descripcion Producto 1",
                            Nombre = "Producto 1"
                        },
                        new
                        {
                            IdProducto = 2,
                            Cantidad = 25,
                            Descripcion = "Descripción Producto 2",
                            Nombre = "Producto 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
